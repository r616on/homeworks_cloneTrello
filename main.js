(()=>{"use strict";class t{constructor(t){this.parentEl=t,this.oneAddCart=0,this.data=null,this.draggedEl=null,this.ghostEl=null,this.xCompenc=null,this.yCompenc=null,this.onClick.bind(this),this.onButtonClick.bind(this),this.onCloseClick.bind(this),this.load.bind(this),this.onMousedown.bind(this),this.onMousemove.bind(this),this.onMouseleave.bind(this),this.onMouseup.bind(this),this.cleanElemDrop.bind(this),this.onTouchup.bind(this),this.onTouchmove.bind(this),this.onTouchdown.bind(this)}static get markup(){return'<div class="Trello-Widget">\n        <div class="Trello-Widget-row">\n\n          <div class="Trello-Widget-column TODU">\n            <div class="column__title">\n              <div class="column__title-text">TODU</div>\n              <div class="column__title-badge">&#8230</div>\n            </div>\n            <div class="column__body">\n             \n            <div class="cart" data-title="Подумайте, может что то надо сделать" data-like ="1" data-comment="1">\n                <div class="cart__title">\n                  <div class="cart__title-text">Подумайте, может что то надо сделать</div>\n                  <div class="cart__title-badge delete">&#10006</div>\n                </div>\n                <ul class="cart__body">\n                  <li class="cart__body-item">&#43 1</li>\n                  <li class="cart__body-item">&#9993 1</li>\n                </ul>\n              </div>\n\n            </div>\n            <div class="column__footer">\n              <div class="column__footer-badge addItem">&#43</div>\n              <div class="column__footer-text">Add another card</div>\n              </div>\n          </div>\n\n          <div class="Trello-Widget-column PROGRESS">\n            <div class="column__title">\n              <div class="column__title-text">PROGRESS</div>\n              <div class="column__title-badge">&#8230</div>\n            </div>\n            <div class="column__body">\n\n            <div class="cart" data-title="А что то уже выполняется" data-like ="1" data-comment="1">\n                <div class="cart__title">\n                  <div class="cart__title-text">А что то уже выполняется</div>\n                  <div class="cart__title-badge delete">&#10006</div>\n                </div>\n                <ul class="cart__body">\n                  <li class="cart__body-item">&#43 1</li>\n                  <li class="cart__body-item">&#9993 1</li>\n                </ul>\n              </div>\n\n            </div>\n            <div class="column__footer">\n              <div class="column__footer-badge addItem">&#43</div>\n              <div class="column__footer-text">Add another card</div> \n              </div>\n          </div>\n\n <div class="Trello-Widget-column DONE">\n            <div class="column__title">\n              <div class="column__title-text">DONE</div>\n              <div class="column__title-badge">&#8230</div>\n            </div>\n            <div class="column__body">\n\n            <div class="cart" data-title="А это уже выполненно" data-like ="1" data-comment="1">\n                <div class="cart__title">\n                  <div class="cart__title-text">А это уже выполненно</div>\n                  <div class="cart__title-badge delete">&#10006</div>\n                </div>\n                <ul class="cart__body">\n                  <li class="cart__body-item">&#43 1</li>\n                  <li class="cart__body-item">&#9993 1</li>\n                </ul>\n              </div>\n\n            </div>\n            <div class="column__footer">\n              <div class="column__footer-badge addItem">&#43</div>\n              <div class="column__footer-text">Add another card</div> \n              </div>\n          </div>\n        </div>\n      </div>'}static get widgetSelector(){return".Trello-Widget"}static get buttonSelector(){return".add-cart__button"}static get inputSelector(){return".add-cart__input"}static get columnTuduSelector(){return".TODU"}static get columnProgressSelector(){return".PROGRESS"}static get columnDoneSelector(){return".DONE"}bindToDOM(){this.parentEl.innerHTML=this.constructor.markup,this.widget=this.parentEl.querySelector(this.constructor.widgetSelector);try{this.data=JSON.parse(localStorage.getItem("dataCart")),null!==this.data&&this.load()}catch(t){console.error(t)}this.widget.addEventListener("click",(t=>this.onClick(t))),this.widget.addEventListener("mousedown",(t=>this.onMousedown(t))),this.widget.addEventListener("touchstart",(t=>this.onTouchdown(t))),this.widget.addEventListener("mouseleave",(t=>this.onMouseleave(t))),this.widget.addEventListener("mouseup",(t=>this.onMouseup(t))),this.widget.addEventListener("touchend",(t=>this.onTouchup(t)))}onMousedown(t){if(t.target.closest(".delete"))return t.target.closest(".cart").remove(),void this.save();this.draggedEl=t.target.closest(".cart"),this.draggedEl&&(this.widget.addEventListener("mousemove",(t=>this.onMousemove(t))),this.onCursorGrabbing(),this.ghostEl=this.draggedEl.cloneNode(!0),this.draggedEl.classList.add("opaciti"),this.ghostEl.classList.add("dragged"),this.parentEl.appendChild(this.ghostEl),this.ghostEl.style.width=`${this.draggedEl.getBoundingClientRect().width}px`,this.ghostEl.style.height=`${this.draggedEl.getBoundingClientRect().height}px`,this.ghostEl.style.left=`${this.draggedEl.offsetLeft}px`,this.ghostEl.style.top=`${this.draggedEl.offsetTop+this.draggedEl.offsetHeight}px`,this.xCompenc=t.pageX-this.ghostEl.offsetLeft,this.yCompenc=t.pageY-this.ghostEl.offsetTop)}onTouchdown(t){if(t.target.closest(".delete"))return t.target.closest(".cart").remove(),void this.save();this.draggedEl=t.target.closest(".cart"),this.draggedEl&&(this.widget.addEventListener("touchmove",(t=>this.onTouchmove(t))),this.onCursorGrabbing(),this.ghostEl=this.draggedEl.cloneNode(!0),this.draggedEl.classList.add("opaciti"),this.ghostEl.classList.add("dragged"),this.parentEl.appendChild(this.ghostEl),this.ghostEl.style.width=`${this.draggedEl.getBoundingClientRect().width}px`,this.ghostEl.style.height=`${this.draggedEl.getBoundingClientRect().height}px`,this.ghostEl.style.left=`${this.draggedEl.offsetLeft}px`,this.ghostEl.style.top=`${this.draggedEl.offsetTop+this.draggedEl.offsetHeight}px`,this.xCompenc=t.changedTouches[0].pageX-this.ghostEl.offsetLeft,this.yCompenc=t.changedTouches[0].pageY-this.ghostEl.offsetTop)}onMousemove(t){if(t.preventDefault(),!this.draggedEl)return;this.ghostEl.style.left=t.pageX-this.xCompenc+"px",this.ghostEl.style.top=t.pageY-this.yCompenc+"px";const e=document.elementFromPoint(t.clientX,t.clientY).closest(".cart"),s=document.elementFromPoint(t.clientX,t.clientY).closest(".column__body");e&&s?s.insertBefore(this.draggedEl,e):null===e&&s&&s.append(this.draggedEl)}onTouchmove(t){if(t.preventDefault(),!this.draggedEl)return;this.ghostEl.style.left=t.changedTouches[0].pageX-this.xCompenc+"px",this.ghostEl.style.top=t.changedTouches[0].pageY-this.yCompenc+"px";const e=document.elementFromPoint(t.changedTouches[0].clientX,t.changedTouches[0].clientY).closest(".cart"),s=document.elementFromPoint(t.changedTouches[0].clientX,t.changedTouches[0].clientY).closest(".column__body");e&&s?s.insertBefore(this.draggedEl,e):null===e&&s&&s.append(this.draggedEl)}onMouseleave(){this.draggedEl&&(this.parentEl.removeChild(this.ghostEl),this.ghostEl=null,this.draggedEl=null)}onMouseup(t){if(!this.draggedEl)return;const e=document.elementFromPoint(t.clientX,t.clientY).closest(".cart"),s=document.elementFromPoint(t.clientX,t.clientY).closest(".column__body");e||s?e&&s?(s.insertBefore(this.draggedEl,e),this.cleanElemDrop(),this.widget.removeEventListener("mousemove",(t=>this.onMousemove(t)))):null===e&&s&&(s.append(this.draggedEl),this.cleanElemDrop(),this.widget.removeEventListener("mousemove",(t=>this.onMousemove(t)))):(this.cleanElemDrop(),this.widget.removeEventListener("mousemove",(t=>this.onMousemove(t))))}onTouchup(t){if(!this.draggedEl)return;const e=document.elementFromPoint(t.changedTouches[0].clientX,t.changedTouches[0].clientY).closest(".cart"),s=document.elementFromPoint(t.changedTouches[0].clientX,t.changedTouches[0].clientY).closest(".column__body");e||s?e&&s?(s.insertBefore(this.draggedEl,e),this.cleanElemDrop(),this.widget.removeEventListener("touchmove",(t=>this.onTouchmove(t)))):null===e&&s&&(s.append(this.draggedEl),this.cleanElemDrop(),this.widget.removeEventListener("touchmove",(t=>this.onTouchmove(t)))):(this.cleanElemDrop(),this.widget.removeEventListener("touchmove",(t=>this.onTouchmove(t))))}cleanElemDrop(){this.noCursorGrabbing(),this.draggedEl.classList.remove("opaciti"),this.parentEl.removeChild(this.ghostEl),this.ghostEl=null,this.draggedEl=null,this.save()}onClick(t){t.target.closest(".column__footer")&&!this.oneAddCart&&(this.oneAddCart=1,t.target.closest(".column__footer").classList.add("disable"),t.target.closest(".Trello-Widget-column").append(this.createModul())),t.target.closest(".add-cart__close")&&this.oneAddCart&&this.onCloseClick(t),t.target.closest(this.constructor.buttonSelector)&&this.onButtonClick(t)}onCloseClick(t){this.oneAddCart=0,t.target.closest(".Trello-Widget-column").querySelector(".column__footer").classList.remove("disable"),t.target.closest(".add-cart").remove()}onButtonClick(t){const e=this.parentEl.querySelector(this.constructor.inputSelector);e.checkValidity()&&(t.target.closest(".Trello-Widget-column").querySelector(".column__body").append(this.addCart(e.value)),this.onCloseClick(t),this.save())}createModul(){const t=document.createElement("div");return t.className="add-cart",t.innerHTML=' <input class="add-cart__input" placeholder="Введите заголовок" required  type="text">\n                          <div class="add-cart__control-row">\n                            <button class="add-cart__button" >Add Card</button>\n                            <div class="add-cart__close close">&#10006</div>\n                           </div>',t}addCart(t,e=null,s=null){const i=document.createElement("div");return i.className="cart",i.dataset.title=t,i.dataset.like=e,i.dataset.comment=s,i.innerHTML=null===!e&&null===!s?`<div class="cart__title">\n                            <div class="cart__title-text">${t}</div>\n                            <div class="cart__title-badge delete">&#10006</div>\n                         </div>\n                        <ul class="cart__body">\n                         <li class="cart__body-item">&#43 ${e}</li>\n                         <li class="cart__body-item">&#9993 ${s}</li>\n                        </ul>`:`<div class="cart__title">\n                            <div class="cart__title-text">${t}</div>\n                            <div class="cart__title-badge delete">&#10006</div>\n                         </div>\n                        <ul class="cart__body">\n                         <li class="cart__body-item">&#43</li>\n                         <li class="cart__body-item">&#9993</li>\n                        </ul>`,i}save(){const t=this.parentEl.querySelector(this.constructor.columnTuduSelector),e=this.parentEl.querySelector(this.constructor.columnProgressSelector),s=this.parentEl.querySelector(this.constructor.columnDoneSelector);function i(t){return[...t.querySelectorAll(".cart")].map(((t,e)=>({index:e,title:t.dataset.title,like:t.dataset.like,comment:t.dataset.comment})))}this.data={tudu:i(t),progress:i(e),done:i(s)},localStorage.setItem("dataCart",JSON.stringify(this.data))}load(){const t=this.parentEl.querySelector(this.constructor.columnTuduSelector),e=this.parentEl.querySelector(this.constructor.columnProgressSelector),s=this.parentEl.querySelector(this.constructor.columnDoneSelector);t.querySelector(".column__body").innerHTML="",this.data.tudu.forEach((e=>{t.querySelector(".column__body").append(this.addCart(e.title,e.like,e.comment))})),e.querySelector(".column__body").innerHTML="",this.data.progress.forEach((t=>{e.querySelector(".column__body").append(this.addCart(t.title,t.like,t.comment))})),s.querySelector(".column__body").innerHTML="",this.data.done.forEach((t=>{s.querySelector(".column__body").append(this.addCart(t.title,t.like,t.comment))}))}onCursorGrabbing(){this.parentEl.classList.add("grabbing"),[...this.parentEl.querySelectorAll(".cart")].forEach((t=>t.classList.add("grabbing")))}noCursorGrabbing(){this.parentEl.classList.remove("grabbing"),[...this.parentEl.querySelectorAll(".cart")].forEach((t=>t.classList.remove("grabbing")))}}document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector(".conteiner");new t(e).bindToDOM()}))})();